.\"
.\" Copyright (C) 2004-2011, 2013 Richard Kettlewell
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\" 
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\" 
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.TH disorder_protocol 5
.SH NAME
disorder_protocol \- DisOrder communication protocol
.SH DESCRIPTION
The DisOrder client and server communicate via the protocol described
in this man page.
.PP
The protocol is usually modified in each new version of the server.
.SH "MESSAGE STRUCTURE"
A \fIline\fR is a sequence of printable Unicode characters encoded in UTF-8 and
terminated by the octet 0x0A.
Note that unlike some other protocols, a carriage return is not used as part of
the end-of-line sequence.
.PP
A \fIcommand message\fR consists of a \fIcommand line\fR followed, in some cases, by a \fIbody\fR.
Similarly a \fIresponse message\fR consists of a \fIresponse line\fR followed
sometimes by a \fIbody\fR.
.PP
A \fIbody\fR consists of a sequence of dot-stuffed lines followed by a line
containing a single full stop character.
Dot-stuffing means that any line in the body starting with a full stop have
another full stop inserted at the start prior to transmission, and removed
again after reception.
.PP
Whether a command message includes a body depends on the specific command being
sent; see below for details.
This is also true of reply messages, although it is guaranteed that if the is a
response body then the reply status code (see below) will end with the digit 3.
.PP
Command lines, and some response lines, are split into \fIfields\fR.
Fields are separated by one or more spaces and may be \fIunquoted\fR or
\fIquoted\fR.
.PP
An \fIunquoted field\fR can contain any (non-control) characters except for a
space, quotation mark or apostrophe.
They are always at least one character long.
.PP
A \fIquoted field\fR begins with a quotation mark or apostrophe and is
terminated by the same character.
Any occurrence of the backslash or the surrounding quotation mark must be
escaped.
The full set of escapes permitted is:
.TP
.B \e\e
Backslash
.TP
.B \e"
Quotation mark
.\" "
.TP
.B \e\(aq
Apostrophe
.TP
.B \en
Line feed
.PP
.SH COMMANDS
Commands always have a command name as the first field of the line.
.PP
All commands require the connection to have been already authenticated unless
stated otherwise.
See \fBAUTHENTICATION\fR below.
If not stated otherwise, the \fBread\fR right is sufficient to execute
the command.
.TP
.B adduser \fIUSERNAME PASSWORD \fR[\fIRIGHTS\fR]
Create a new user with the given username and password.
The new user's rights list can be specified; if it is not
then the \fBdefault_rights\fR setting applies instead.
Requires the \fBadmin\fR right, and only works on local
connections.
.TP
.B adopt \fIID\fR
Adopts a randomly picked track, leaving it in a similar state to if it was
picked by this user.  Requires the \fBplay\fR right.
.TP
.B allfiles \fIDIRECTORY\fR [\fIREGEXP\fR]
List all the files and directories in \fIDIRECTORY\fR in a response body.
If \fIREGEXP\fR is present only matching files and directories are returned.
.TP
.B confirm \fICONFIRMATION
Confirm user registration.
\fICONFIRMATION\fR is as returned from \fBregister\fR below.
This command logs the user in.
The response contains the logged-in username.
.TP
.B cookie \fICOOKIE
Log a user back in using a cookie created with \fBmake\-cookie\fR.
The response contains the username.
.TP
.B deluser \fIUSERNAME
Delete the named user.
Requires the \fBadmin\fR right, and only works on local connections.
.TP
.B dirs \fIDIRECTORY\fR [\fIREGEXP\fR]
List all the directories in \fIDIRECTORY\fR in a response body.
If \fIREGEXP\fR is present only matching directories are returned.
.TP
.B disable \fR[\fBnow\fR]
Disable further playing.
If the optional \fBnow\fR argument is present then the current track
is stopped.
Requires the \fBglobal prefs\fR right.
.TP
.B edituser \fIUSERNAME PROPERTY VALUE
Set a user property.
With the \fBadmin\fR right any username and property may be specified.
Otherwise the \fBuserinfo\fR right is required and only the
\fBemail\fR and \fBpassword\fR properties may be set.
.IP
User properties are syntax-checked before setting.  For instance \fBemail\fR
must contain an "@" sign or you will get an error.  (Setting an empty value for
\fBemail\fR is allowed and removes the property.)
.IP
See \fBUSER PROPERTIES\fR below.
.TP
.B enable
Re-enable further playing, and is the opposite of \fBdisable\fR.
Requires the \fBglobal prefs\fR right.
.TP
.B enabled
Report whether playing is enabled.
The second field of the response line will be \fByes\fR or \fBno\fR.
.TP
.B exists \fITRACK\fR
Report whether the named track exists.
The second field of the response line will be \fByes\fR or \fBno\fR.
.TP
.B files \fIDIRECTORY\fR [\fIREGEXP\fR]
List all the files in \fIDIRECTORY\fR in a response body.
If \fIREGEXP\fR is present only matching files are returned.
.TP
.B get \fITRACK\fR \fIPREF\fR
Gets a preference value.
On success the second field of the response line will have the value.
.IP
If the track or preference do not exist then the response code is 555.
.TP
.B get\-global \fIKEY\fR
Get a global preference.
.IP
If the preference does not exist then the response code is 555.
.TP
.B length \fITRACK\fR
Get the length of the track in seconds.
On success the second field of the response line will have the value.
.TP
.B log
Send event log messages in a response body.
The command will never terminate.
Any further data sent to the server will be discarded (explicitly;
i.e. it will not accumulate in a buffer somewhere).
.IP
See \fBEVENT LOG\fR below for more details.
.TP
.B make\-cookie
Returns an opaque string that can be used by the \fBcookie\fR command to log
this user back in on another connection (until the cookie expires).
.TP
.B move \fITRACK\fR \fIDELTA\fR
Move a track in the queue.
The track may be identified by ID (preferred) or name (which might cause
confusion if it's there twice).
\fIDELTA\fR should be an negative or positive integer and indicates how
many steps towards the head of the queue the track should be moved.
.IP
Requires one of the \fBmove mine\fR, \fBmove random\fR or \fBmove any\fR rights
depending on how the track came to be added to the queue.
.TP
.B moveafter \fITARGET\fR \fIID\fR ...
Move all the tracks in the \fIID\fR list after ID \fITARGET\fR.
If \fITARGET\fR is the empty string then the listed tracks are put
at the head of the queue.
If \fITARGET\fR is listed in the ID list then the tracks are moved
to just after the first non-listed track before it, or to the head if there is
no such track.
.IP
Requires one of the \fBmove mine\fR, \fBmove random\fR or \fBmove any\fR rights
depending on how the tracks came to be added to the queue.
.TP
.B new \fR[\fIMAX\fR]
Send the most recently added \fIMAX\fR tracks in a response body.
If the argument is omitted, the \fBnew_max\fR most recent tracks are
listed (see \fBdisorder_config\fR(5)).
.TP
.B nop
Do nothing.
Used by
.BR disobedience (1)
as a keepalive measure.
This command does not require authentication.
.TP
.B part \fITRACK\fR \fICONTEXT\fI \fIPART\fR
Get a track name part.
Returns an empty string if a name part cannot be constructed.
.IP
.I CONTEXT
is one of
.B sort
or
.B display
and
.I PART
is usually one of
.BR artist ,
.B album
or
.BR title .
.TP
.B pause
Pause the current track.
Requires the \fBpause\fR right.
.TP
.B play \fITRACK\fR
Add a track to the queue.
The response contains the queue ID of the track.
Requires the \fBplay\fR right.
.TP
.B playafter \fITARGET\fR \fITRACK\fR ...
Add all the tracks in the \fITRACK\fR list to the queue after \fITARGET\fR
(which should be a track ID).
If \fITARGET\fR is the empty string then the listed tracks are put
at the head of the queue.
.IP
Currently the success result does \fInot\fR include the new track IDs.
.IP
Requires the \fBplay\fR right.
.TP
.B playing
Report what track is playing.
.IP
If the response is \fB252\fR then the rest of the response line consists of
track information (see below).
.IP
If the response is \fB259\fR then nothing is playing.
.TP
.B playlist-delete \fIPLAYLIST\fR
Delete a playlist.
Requires permission to modify that playlist and the \fBplay\fR right.
.TP
.B playlist-get \fIPLAYLIST\fR
Get the contents of a playlist, in a response body.
Requires permission to read that playlist and the \fBread\fR right.
If the playlist does not exist the response is 555.
.TP
.B playlist-get-share \fIPLAYLIST\fR
Get the sharing status of a playlist.
The result will be \fBpublic\fR, \fBprivate\fR or \fBshared\fR.
Requires permission to read that playlist and the \fBread\fR right.
.TP
.B playlist-lock \fIPLAYLIST\fR
Lock a playlist.
Requires permission to modify that playlist and the \fBplay\fR right.
Only one playlist may be locked at a time on a given connection and the lock
automatically expires when the connection is closed.
.TP
.B playlist-set \fIPLAYLIST\fR
Set the contents of a playlist.
The new contents should be supplied in a command body.
Requires permission to modify that playlist and the \fBplay\fR right.
The playlist must be locked.
.TP
.B playlist-set-share \fIPLAYLIST\fR \fISHARE\fR
Set the sharing status of a playlist to
\fBpublic\fR, \fBprivate\fR or \fBshared\fR.
Requires permission to modify that playlist and the \fBplay\fR right.
.TP
.B playlist-unlock\fR
Unlock the locked playlist.
.TP
.B playlists
List all playlists that this connection has permission to read.
Requires the \fBread\fR right.
.TP
.B prefs \fBTRACK\fR
Send back the preferences for \fITRACK\fR in a response body.
Each line of the response has the usual line syntax, the first field being the
name of the pref and the second the value.
.TP
.B queue
Send back the current queue in a response body, one track to a line, the track
at the head of the queue (i.e. next to be be played) first.
See below for the track information syntax.
.TP
.B random\-disable
Disable random play (but don't stop the current track).
Requires the \fBglobal prefs\fR right.
.TP
.B random\-enable
Enable random play.
Requires the \fBglobal prefs\fR right.
.TP
.B random\-enabled
Report whether random play is enabled.
The second field of the response line will be \fByes\fR or \fBno\fR.
.TP
.B recent
Send back the current recently-played list in a response body, one track to a
line, the track most recently played last.
See below for the track information syntax.
.TP
.B reconfigure
Request that DisOrder reconfigure itself.
Requires the \fBadmin\fR right.
.IP
Not all configuration options can be modified during the lifetime of the
server; of those that can't, some will just be ignored if they change while
others will cause the new configuration to be rejected.
See \fBdisorder_config\fR(5) for details.
.TP
.B register \fIUSERNAME PASSWORD EMAIL
Register a new user.
Requires the \fBregister\fR right.
The result contains a confirmation string; the user will be be able
to log in until this has been presented back to the server via the
\fBconfirm\fR command.
.TP
.B reminder \fIUSERNAME\fR
Send a password reminder to user \fIUSERNAME\fR.
If the user has no valid email address, or no password, or a
reminder has been sent too recently, then no reminder will be sent.
.TP
.B remove \fIID\fR
Remove the track identified by \fIID\fR.
Requires one of the \fBremove mine\fR, \fBremove random\fR or
\fBremove any\fR rights depending on how the
track came to be added to the queue.
.TP
.B rescan \fR[\fBwait\fR] \fR[\fBfresh\fR]
Rescan all roots for new or obsolete tracks.
Requires the \fBrescan\fR right.
.IP
If the \fBwait\fR flag is present then the response is delayed until the rescan
completes.
Otherwise the response arrives immediately.
This is primarily intended for testing.
.IP
If the \fBfresh\fR flag is present a rescan is already underway then a second
rescan will be started when it completes.
The default behavior is to piggyback on the existing rescan.
.IP
NB that \fBfresh\fR is currently disabled in the server source, so using this
flag will just provoke an error.
.TP
.B resolve \fITRACK\fR
Resolve a track name, i.e. if this is an alias then return the real track name.
.TP
.B resume
Resume the current track after a \fBpause\fR command.
Requires the \fBpause\fR right.
.TP
.B revoke
Revoke the current login's cookie.
It will not be possible to use the cookie in the future.
.TP
.B rtp\-address
Report the RTP broadcast (or multicast) address, in the form \fIADDRESS
PORT\fR.
If the server is in RTP request mode then the result is \fB- -\fR.
This command does not require authentication.
.TP
.B rtp\-cancel
Cancel the unicast RTP stream associated with this connection.
.TP
.B rtp\-request \fIADDRESS PORT\fR
Request that an RTP stream be transmitted to a given destination address.
Only one unicast stream may be requested per connection.
WHen the connection is closed the stream is terminated.
.TP
.B scratch \fR[\fIID\fR]
Remove the track identified by \fIID\fR, or the currently playing track if no
\fIID\fR is specified.
Requires one of the \fBscratch mine\fR, \fBscratch random\fR or
\fBscratch any\fR rights depending on how the track came to be
added to the queue.
.TP
.B schedule-add \fIWHEN\fR \fIPRIORITY\fR \fIACTION\fR ...
Schedule an event for the future.
.IP
.I WHEN
is the time when it should happen, as a timestamp.
See \fBTIMESTAMPS\fR below.
It must refer to a time in the future.
.IP
.I PRIORITY
is the event priority.
This can be \fBnormal\fR, in which case the event will be run at startup if its
time has past, or \fBjunk\fR in which case it will be discarded if it is found
to be in the past at startup.
The meaning of other values is not defined.
.IP
.I ACTION
is the action to perform.
The choice of action determines the meaning of the remaining arguments.
Possible actions are:
.RS
.TP
.B play
Play a track.
The next argument is the track name.
Requires the \fBplay\fR right.
.TP
.B set-global
Set a global preference.
The next argument is the preference name and the final argument is the value to
set it to (omit it to unset it).
Requires the \fBglobal prefs\fR right.
.RE
.IP
You need the right at the point you create the event.
It is not possible to create scheduled events in expectation of a future change
in rights.
.TP
.B schedule-del \fIEVENT\fR
Deletes a scheduled event.
Users can always delete their own scheduled events; with the \fBadmin\fR
right you can delete any event.
.TP
.B schedule-get \fIEVENT\fR
Sends the details of scheduled event \fIEVENT\fR in a response body.
Each line is a pair of strings quoted in the usual way, the first being the key
ane the second the value.
No particular order is used.
.IP
Scheduled events are considered public information.
Right \fBread\fR is sufficient to see details of all events.
.TP
.B schedule-list
Sends the event IDs of all scheduled events in a response body, in no
particular order.
Use \fBschedule-get\fR to get the details of each event.
.TP
.B search \fITERMS\fR
Search for tracks matching the search terms.
The results are put in a response body, one to a line.
.IP
The search string is split in the usual way, with quoting supported, into a
list of terms.
Only tracks matching all terms are included in the results.
.IP
Any terms of the form \fBtag:\fITAG\fR limits the search to tracks with that
tag.
.IP
All other terms are interpreted as individual words which must be present in
the track name.
.IP
Spaces in terms don't currently make sense, but may one day be interpreted to
allow searching for phrases.
.TP
.B \fBset\fR \fITRACK\fR \fIPREF\fR \fIVALUE\fR
Set a preference.
Requires the \fBprefs\fR right.
.TP
.B set\-global \fIKEY\fR \fIVALUE\fR
Set a global preference.
Requires the \fBglobal prefs\fR right.
.TP
.B shutdown
Requests server shutdown.
Requires the \fBadmin\fR right.
.TP
.B stats
Send server statistics in plain text in a response body.
.TP
.B \fBtags\fR
Send the list of currently known tags in a response body.
.TP
.B \fBunset\fR \fITRACK\fR \fIPREF\fR
Unset a preference.
Requires the \fBprefs\fR right.
.TP
.B \fBunset\-global\fR \fIKEY\fR
Unset a global preference.
Requires the \fBglobal prefs\fR right.
.TP
.B user \fIUSERNAME\fR \fIRESPONSE\fR
Authenticate as user \fIUSERNAME\fR.
See
.B AUTHENTICATION
below.
.TP
.B userinfo \fIUSERNAME PROPERTY
Get a user property.
See \fBUSER PROPERTIES\fR below.
.TP
.B users
Send the list of currently known users in a response body.
.TP
.B version
Send back a response with the server version as the second field.
.TP
.B volume \fR[\fILEFT\fR [\fIRIGHT\fR]]
Get or set the volume.
.IP
With zero parameters just gets the volume and reports the left and right sides
as the 2nd and 3rd fields of the response.
.IP
With one parameter sets both sides to the same value.
With two parameters sets each side independently.
Setting the volume requires the \fBvolume\fR right.
.SH RESPONSES
Response lines start with a three-digit status code followed by a space.
The meaning the response and the interpretation of the rest of the line depends
on that code.
.PP
The first digit distinguishes errors from successful responses:
.TP
.B 2
Operation succeeded.
.TP
.B 5
Operation failed.
.PP
The second digit breaks down the origin of the response:
.TP
.B 0
Generic responses not specific to the handling of the command.
.TP
.B 1
51x errors indicate that the user had insufficient rights for the command.
.TP
.B 3
Authentication responses.
.TP
.B 5
Responses specific to the handling of the command.
.PP
The third digit provides extra information about the response:
.TP
.B 0
Text part is just commentary, intended to be human-readable.
.TP
.B 1
Text part is a constant result (e.g. \fBversion\fR).
It will not change on a subsequent use of the same command on the same
conneciton.
.TP
.B 2
Text part is a potentially variable result.
.TP
.B 3
Text part is just commentary; a dot-stuffed body follows.
.TP
.B 4
Text part is just commentary; an indefinite dot-stuffed body follows.
(Used for \fBlog\fR.)
.TP
.B 5
Used with "harmless" errors, for instance a preference not being found.
The text part is commentary.
.TP
.B 9
The text part is just commentary (but would normally be a response for this
command) e.g. \fBplaying\fR.
.PP
Result strings (not bodies) intended for machine parsing (i.e. xx1 and xx2
responses) are structure into fields in the the same way as command lines.
.SH AUTHENTICATION
When a connection is made the server sends a \fB231\fR response before any
command is received.
This contains a protocol generation, an algorithm name and a
challenge encoded in hex, in the fields of the response line.
.PP
The current protocol generation is \fB2\fR.
.PP
The possible algorithms are (currently) \fBsha1\fR, \fBsha256\fR, \fBsha384\fR
and \fBsha512\fR.
Completely upper-case names such as \fBSHA1\fR etc work as synonyms.
.PP
The \fBuser\fR response consists of the selected hash of the user's password
concatenated with the challenge, encoded in hex.
.SH "TRACK INFORMATION"
Track information is encoded in a response line as pairs of fields.
The first is a name, the second a value.
The names have the following meanings:
.TP 12
.B expected
The time the track is expected to be played at.
.TP
.B id
A string uniquely identifying this queue entry.
.TP
.B played
The time the track was played at.
.TP
.B scratched
The user that scratched the track.
.TP
.B origin
The origin of the track.  Valid origins are:
.RS
.TP 12
.B adopted
The track was originally randomly picked but has been adopted by a user.
.TP
.B picked
The track was picked by a user.
.TP
.B random
The track was randomly picked.
.TP
.B scheduled
The track was played from a scheduled action.
.TP
.B scratch
The track is a scratch sound.
.RE
.TP
.B state
The current track state.
Valid states are:
.RS
.TP 12
.B failed
The player failed (exited with nonzero status but wasn't scratched).
.TP
.B ok
The track was played without any problems.
.TP
.B scratched
The track was scratched.
.TP
.B started
The track is currently playing.
.TP
.B paused
Track is playing but paused.
.TP
.B unplayed
In the queue, hasn't been played yet.
.TP
.B quitting
The track was terminated because the server is shutting down.
.RE
.TP
.B sofar
The number of seconds of the track that have been played so far.
.TP
.B submitter
The user that submitted the track.
.TP
.B track
The filename of the track.
.TP
.B when
The time the track was added to the queue.
.TP
.B wstat
The wait status of the player in decimal.
.PP
Note that \fBorigin\fR is new with DisOrder 4.3, and obsoletes some old
\fBstate\fR values.
.SH "EVENT LOG"
The event log consists of lines starting with a hexadecimal timestamp and a
keyword followed by (optionally) parameters, which are structured into fields
in the same way as command and response lines.
Currently the following keywords are used:
.TP
.B adopted \fIID\fR \fIUSERNAME\fR
\fIUSERNAME\fR adopted track \fIID\fR.
.TP
.B completed \fITRACK\fR
Completed playing \fITRACK\fR
.TP
.B failed \fITRACK\fR \fIERROR\fR
Completed playing \fITRACK\fR with an error status
.TP
.B global_pref \fIPREF\fR [\fIVALUE\fR]
A global preference was set or unset.
.TP
.B moved \fIUSERNAME\fR
User \fIUSERNAME\fR moved some track(s).
Further details aren't included any more.
.TP
.B playing \fITRACK\fR [\fIUSERNAME\fR]
Started playing \fITRACK\fR.
.TP
.B playlist_created \fIPLAYLIST\fR \fISHARING\fR
Sent when a playlist is created.
For private playlists this is intended to be sent only to the owner (but
this is not currently implemented).
.TP
.B playlist_deleted \fIPLAYLIST\fR
Sent when a playlist is deleted.
For private playlists this is intended to be sent only to the owner (but
this is not currently implemented).
.TP
.B playlist_modified \fIPLAYLIST\fR \fISHARING\fR
Sent when a playlist is modified (either its contents or its sharing status).
For private playlists this is intended to be sent only to the owner (but
this is not currently implemented).
.TP
.B queue \fIQUEUE-ENTRY\fR...
Added \fITRACK\fR to the queue.
.TP
.B recent_added \fIQUEUE-ENTRY\fR...
Added \fIID\fR to the recently played list.
.TP
.B recent_removed \fIID\fR
Removed \fIID\fR from the recently played list.
.TP
.B removed \fIID\fR [\fIUSERNAME\fR]
Queue entry \fIID\fR was removed.
This is used both for explicit removal (when \fIUSERNAME\fR is present)
and when playing a track (when it is absent).
.TP
.B rescanned
A rescan completed.
.TP
.B scratched \fITRACK\fR \fIUSERNAME\fR
\fITRACK\fR was scratched by \fIUSERNAME\fR.
.TP
.B state \fIKEYWORD\fR
Some state change occurred.
The current set of keywords is:
.RS
.TP
.B completed
The current track completed successfully.
.TP
.B disable_play
Playing was disabled.
.TP
.B disable_random
Random play was disabled.
.TP
.B enable_play
Playing was enabled.
.TP
.B enable_random
Random play was enabled.
.TP
.B failed
The current track failed.
.TP
.B pause
The current track was paused.
.TP
.B playing
A track started playing.
.TP
.B resume
The current track was resumed.
.TP
.B rights_changed \fIRIGHTS\fR
User's rights were changed.
.TP
.B scratched
The current track was scratched.
.PP
To simplify client implementation, \fBstate\fR commands reflecting the current
state are sent at the start of the log.
.RE
.TP
.B user_add \fIUSERNAME\fR
A user was created.
.TP
.B user_delete \fIUSERNAME\fR
A user was deleted.
.TP
.B user_edit \fIUSERNAME\fR \fIPROPERTY\fR
Some property of a user was edited.
.TP
.B user_confirm \fIUSERNAME\fR
A user's login was confirmed (via the web interface).
.TP
.B volume \fILEFT\fR \fIRIGHT\fR
The volume changed.
.PP
.IR QUEUE-ENTRY ...
is as defined in
.B "TRACK INFORMATION"
above.
.PP
The \fBuser-*\fR messages are only sent to admin users, and are not sent over
non-local connections unless \fBremote_userman\fR is enabled.
.SH "USER PROPERTIES"
The following user properties are defined:
.TP
.B created
The timestamp when the user was created.
See \fBTIMESTAMPS\fR below.
This user property cannot be modified.
.TP
.B email
The user's email address.
.TP
.B password
The user's password.
.TP
.B rights
The rights the user has, separated by commas.
.SH RIGHTS
The full set of rights are:
.TP
.B read
User can perform read-only operations
.TP
.B play
User can add tracks to the queue
.TP
.B "move any"
User can move any track
.TP
.B "move mine"
User can move their own tracks
.TP
.B "move random"
User can move randomly chosen tracks
.TP
.B "remove any"
User can remove any track
.TP
.B "remove mine"
User can remove their own tracks
.TP
.B "remove random"
User can remove randomly chosen tracks
.TP
.B "scratch any"
User can scratch any track
.TP
.B "scratch mine"
User can scratch their own tracks
.TP
.B "scratch random"
User can scratch randomly chosen tracks
.TP
.B volume
User can change the volume
.TP
.B admin
User can perform admin operations
.TP
.B rescan
User can initiate a rescan
.TP
.B register
User can register new users.
Normally only the
.B guest
user would have this right.
.TP
.B userinfo
User can edit their own userinfo
.TP
.B prefs
User can modify track preferences
.TP
.B "global prefs"
User can modify global preferences
.TP
.B pause
User can pause/resume
.SH TIMESTAMPS
A \fItimestamp\fR is a decimal integer giving a number of seconds past the
epoch, disregarding counting leap seconds.
The epoch is midnight, January 1 1970, UTC.
.SH NOTES
For file listings, the regexp applies to the basename of the returned file, not
the whole filename, and letter case is ignored.
\fBpcrepattern\fR(3) describes the regexp syntax.
.PP
Filenames are in UTF-8 even if the collection they come from uses some other
encoding - if you want to access the real file (in such cases as the filenames
actually correspond to a real file) you'll have to convert to whatever the
right encoding is.
.SH "SEE ALSO"
\fBdisorder\fR(1),
\fBtime\fR(2),
\fBdisorder\fR(3),
\fBpcrepattern\fR(3)
\fBdisorder_config\fR(5),
\fBdisorderd\fR(8),
\fButf8\fR(7)
.\" Local Variables:
.\" mode:nroff
.\" fill-column:79
.\" End:
